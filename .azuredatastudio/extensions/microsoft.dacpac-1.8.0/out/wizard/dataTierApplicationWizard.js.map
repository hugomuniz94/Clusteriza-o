{"version":3,"file":"dataTierApplicationWizard.js","sourceRoot":"../../src","sources":["wizard/dataTierApplicationWizard.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as azdata from 'azdata';\nimport * as loc from '../localizedConstants';\nimport * as mssql from '../../../mssql';\nimport * as utils from '../utils';\nimport { SelectOperationPage } from './pages/selectOperationpage';\nimport { DeployConfigPage } from './pages/deployConfigPage';\nimport { DeployPlanPage } from './pages/deployPlanPage';\nimport { DacFxSummaryPage } from './pages/dacFxSummaryPage';\nimport { ExportConfigPage } from './pages/exportConfigPage';\nimport { ExtractConfigPage } from './pages/extractConfigPage';\nimport { ImportConfigPage } from './pages/importConfigPage';\nimport { DacFxDataModel } from './api/models';\nimport { BasePage } from './api/basePage';\nimport { TelemetryReporter, TelemetryViews } from '../telemetry';\nimport { TelemetryEventMeasures, TelemetryEventProperties } from '@microsoft/ads-extension-telemetry';\n\nconst msSqlProvider = 'MSSQL';\nclass Page {\n\twizardPage: azdata.window.WizardPage;\n\tdacFxPage: BasePage;\n\n\tconstructor(wizardPage: azdata.window.WizardPage) {\n\t\tthis.wizardPage = wizardPage;\n\t}\n}\n\nexport enum Operation {\n\tdeploy,\n\textract,\n\timport,\n\texport\n}\n\nexport enum DeployOperationPath {\n\tselectOperation,\n\tdeployOptions,\n\tdeployPlan,\n\tsummary\n}\n\nexport enum DeployNewOperationPath {\n\tselectOperation,\n\tdeployOptions,\n\tsummary\n}\n\nexport enum ExtractOperationPath {\n\tselectOperation,\n\toptions,\n\tsummary\n}\n\nexport enum ImportOperationPath {\n\tselectOperation,\n\toptions,\n\tsummary\n}\n\nexport enum ExportOperationPath {\n\tselectOperation,\n\toptions,\n\tsummary\n}\n\nexport enum PageName {\n\tselectOperation = 'selectOperation',\n\tdeployConfig = 'deployConfig',\n\tdeployPlan = 'deployPlan',\n\textractConfig = 'extractConfig',\n\timportConfig = 'importConfig',\n\texportConfig = 'exportConfig',\n\tsummary = 'summary'\n}\n\nexport class DataTierApplicationWizard {\n\tpublic wizard: azdata.window.Wizard;\n\tprivate connection: azdata.connection.ConnectionProfile;\n\tprivate dacfxService: mssql.IDacFxService;\n\tpublic model: DacFxDataModel;\n\tpublic pages: Map<string, Page> = new Map<string, Page>();\n\tpublic selectedOperation: Operation;\n\tpublic extensionContextExtensionPath: string;\n\n\tconstructor(dacfxInputService?: mssql.IDacFxService, extensionContext?: vscode.ExtensionContext) {\n\t\tthis.wizard = azdata.window.createWizard(loc.wizardTitle, 'Data Tier Application Wizard');\n\t\tthis.dacfxService = dacfxInputService;\n\t\tthis.extensionContextExtensionPath = extensionContext?.extensionPath ?? '';\n\t}\n\n\tpublic async start(p: any): Promise<boolean> {\n\t\tthis.model = <DacFxDataModel>{};\n\n\t\tlet profile = p ? <azdata.IConnectionProfile>p.connectionProfile : undefined;\n\t\tif (profile) {\n\t\t\tthis.model.serverId = profile.id;\n\t\t\tthis.model.database = profile.databaseName;\n\t\t}\n\n\t\tthis.connection = await azdata.connection.getCurrentConnection();\n\t\tif (!this.connection || (profile && this.connection.connectionId !== profile.id)) {\n\t\t\t// check if there are any active connections\n\t\t\tconst connections = await azdata.connection.getConnections(true);\n\t\t\tif (connections.length > 0) {\n\t\t\t\t// set connection to the first one in the list\n\t\t\t\tthis.connection = connections[0];\n\t\t\t} else {\n\t\t\t\t// @TODO: remove cast once azdata update complete - karlb 3/1/2019\n\t\t\t\tthis.connection = <azdata.connection.ConnectionProfile><any>await azdata.connection.openConnectionDialog(undefined, profile);\n\t\t\t}\n\t\t\t// don't open the wizard if connection dialog is cancelled\n\t\t\tif (!this.connection) {\n\t\t\t\t//Reporting Dacpac wizard cancelled event to Telemetry\n\t\t\t\tTelemetryReporter.sendActionEvent(TelemetryViews.DataTierApplicationWizard, 'ConnectionDialogCancelled');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tthis.model.serverId = this.connection.connectionId;\n\t\tthis.setPages();\n\t\tthis.configureButtons();\n\n\t\tthis.wizard.open();\n\t\treturn true;\n\t}\n\n\tpublic setPages(): void {\n\t\tlet selectOperationWizardPage = azdata.window.createWizardPage(loc.selectOperationPageName, 'Select an Operation Page');\n\t\tlet deployConfigWizardPage = azdata.window.createWizardPage(loc.deployConfigPageName, 'Deploy Config Page');\n\t\tlet deployPlanWizardPage = azdata.window.createWizardPage(loc.deployPlanPageName, 'Deploy Plan Page');\n\t\tlet summaryWizardPage = azdata.window.createWizardPage(loc.summaryPageName, 'Summary Page');\n\t\tlet extractConfigWizardPage = azdata.window.createWizardPage(loc.extractConfigPageName, 'Extract Config Page');\n\t\tlet importConfigWizardPage = azdata.window.createWizardPage(loc.importConfigPageName, 'Import Config Page');\n\t\tlet exportConfigWizardPage = azdata.window.createWizardPage(loc.exportConfigPageName, 'Export Config Page');\n\n\t\tthis.pages.set(PageName.selectOperation, new Page(selectOperationWizardPage));\n\t\tthis.pages.set(PageName.deployConfig, new Page(deployConfigWizardPage));\n\t\tthis.pages.set(PageName.deployPlan, new Page(deployPlanWizardPage));\n\t\tthis.pages.set(PageName.extractConfig, new Page(extractConfigWizardPage));\n\t\tthis.pages.set(PageName.importConfig, new Page(importConfigWizardPage));\n\t\tthis.pages.set(PageName.exportConfig, new Page(exportConfigWizardPage));\n\t\tthis.pages.set(PageName.summary, new Page(summaryWizardPage));\n\n\t\tselectOperationWizardPage.registerContent(async (view) => {\n\t\t\tlet selectOperationDacFxPage = new SelectOperationPage(this, selectOperationWizardPage, this.model, view);\n\t\t\tthis.pages.get('selectOperation').dacFxPage = selectOperationDacFxPage;\n\t\t\tawait selectOperationDacFxPage.start().then(() => {\n\t\t\t\tselectOperationDacFxPage.setupNavigationValidator();\n\t\t\t\tselectOperationDacFxPage.onPageEnter();\n\t\t\t});\n\t\t});\n\n\t\tdeployConfigWizardPage.registerContent(async (view) => {\n\t\t\tlet deployConfigDacFxPage = new DeployConfigPage(this, deployConfigWizardPage, this.model, view);\n\t\t\tthis.pages.get(PageName.deployConfig).dacFxPage = deployConfigDacFxPage;\n\t\t\tawait deployConfigDacFxPage.start();\n\t\t});\n\n\t\tdeployPlanWizardPage.registerContent(async (view) => {\n\t\t\tlet deployPlanDacFxPage = new DeployPlanPage(this, deployPlanWizardPage, this.model, view);\n\t\t\tthis.pages.get(PageName.deployPlan).dacFxPage = deployPlanDacFxPage;\n\t\t\tawait deployPlanDacFxPage.start();\n\t\t});\n\n\t\textractConfigWizardPage.registerContent(async (view) => {\n\t\t\tlet extractConfigDacFxPage = new ExtractConfigPage(this, extractConfigWizardPage, this.model, view);\n\t\t\tthis.pages.get(PageName.extractConfig).dacFxPage = extractConfigDacFxPage;\n\t\t\tawait extractConfigDacFxPage.start();\n\t\t});\n\n\t\timportConfigWizardPage.registerContent(async (view) => {\n\t\t\tlet importConfigDacFxPage = new ImportConfigPage(this, importConfigWizardPage, this.model, view);\n\t\t\tthis.pages.get(PageName.importConfig).dacFxPage = importConfigDacFxPage;\n\t\t\tawait importConfigDacFxPage.start();\n\t\t});\n\n\t\texportConfigWizardPage.registerContent(async (view) => {\n\t\t\tlet exportConfigDacFxPage = new ExportConfigPage(this, exportConfigWizardPage, this.model, view);\n\t\t\tthis.pages.get(PageName.exportConfig).dacFxPage = exportConfigDacFxPage;\n\t\t\tawait exportConfigDacFxPage.start();\n\t\t});\n\n\t\tsummaryWizardPage.registerContent(async (view) => {\n\t\t\tlet summaryDacFxPage = new DacFxSummaryPage(this, summaryWizardPage, this.model, view);\n\t\t\tthis.pages.get(PageName.summary).dacFxPage = summaryDacFxPage;\n\t\t\tawait summaryDacFxPage.start();\n\t\t});\n\n\t\tthis.wizard.onPageChanged(async (event) => {\n\t\t\tlet idxLast = event.lastPage;\n\t\t\tlet lastPage = this.getPage(idxLast);\n\t\t\tif (lastPage) {\n\t\t\t\tlastPage.dacFxPage.onPageLeave();\n\t\t\t}\n\n\t\t\tlet idx = event.newPage;\n\t\t\tlet page = this.getPage(idx);\n\t\t\tif (page) {\n\t\t\t\tpage.dacFxPage.setupNavigationValidator();\n\t\t\t\tpage.dacFxPage.onPageEnter();\n\t\t\t}\n\t\t});\n\n\t\tthis.wizard.pages = [selectOperationWizardPage, deployConfigWizardPage, deployPlanWizardPage, summaryWizardPage];\n\t}\n\n\tpublic configureButtons(): void {\n\t\tthis.wizard.generateScriptButton.hidden = true;\n\t\tthis.wizard.generateScriptButton.onClick(async () => await this.generateDeployScript());\n\t\tthis.wizard.doneButton.onClick(async () => await this.executeOperation());\n\t\tthis.wizard.cancelButton.onClick(() => this.cancelDataTierApplicationWizard());\n\t}\n\n\tpublic registerNavigationValidator(validator: (pageChangeInfo: azdata.window.WizardPageChangeInfo) => boolean) {\n\t\tthis.wizard.registerNavigationValidator(validator);\n\t}\n\n\tpublic setDoneButton(operation: Operation): void {\n\t\tswitch (operation) {\n\t\t\tcase Operation.deploy: {\n\t\t\t\tthis.wizard.doneButton.label = loc.deploy;\n\t\t\t\tthis.selectedOperation = Operation.deploy;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Operation.extract: {\n\t\t\t\tthis.wizard.doneButton.label = loc.extract;\n\t\t\t\tthis.selectedOperation = Operation.extract;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Operation.import: {\n\t\t\t\tthis.wizard.doneButton.label = loc.importText;\n\t\t\t\tthis.selectedOperation = Operation.import;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Operation.export: {\n\t\t\t\tthis.wizard.doneButton.label = loc.exportText;\n\t\t\t\tthis.selectedOperation = Operation.export;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (operation !== Operation.deploy) {\n\t\t\tthis.model.upgradeExisting = false;\n\t\t}\n\t}\n\n\tpublic async executeOperation(): Promise<mssql.DacFxResult> {\n\t\tlet result: mssql.DacFxResult;\n\n\t\tswitch (this.selectedOperation) {\n\t\t\tcase Operation.deploy: {\n\t\t\t\tresult = await this.deploy();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Operation.extract: {\n\t\t\t\tresult = await this.extract();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Operation.import: {\n\t\t\t\tresult = await this.import();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Operation.export: {\n\t\t\t\tresult = await this.export();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!result || !result.success) {\n\t\t\tvscode.window.showErrorMessage(this.getOperationErrorMessage(this.selectedOperation, result?.errorMessage));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate getOperationErrorMessage(operation: Operation, error: any): string {\n\t\tswitch (this.selectedOperation) {\n\t\t\tcase Operation.deploy: {\n\t\t\t\treturn loc.operationErrorMessage(loc.deploy, error);\n\t\t\t}\n\t\t\tcase Operation.extract: {\n\t\t\t\treturn loc.operationErrorMessage(loc.extract, error);\n\t\t\t}\n\t\t\tcase Operation.import: {\n\t\t\t\treturn loc.operationErrorMessage(loc.importText, error);\n\t\t\t}\n\t\t\tcase Operation.export: {\n\t\t\t\treturn loc.operationErrorMessage(loc.exportText, error);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Cancel button on click event is using to send the data loss information to telemetry\n\tprivate cancelDataTierApplicationWizard(): void {\n\t\tTelemetryReporter.createActionEvent(TelemetryViews.DataTierApplicationWizard, 'WizardCanceled')\n\t\t\t.withAdditionalProperties({\n\t\t\t\tisPotentialDataLoss: this.model.potentialDataLoss?.toString()\n\t\t\t}).send();\n\t}\n\n\tpublic async deploy(): Promise<mssql.DacFxResult> {\n\t\tconst deployStartTime = new Date().getTime();\n\t\tlet service: mssql.IDacFxService;\n\t\tlet ownerUri: string;\n\t\tlet result: mssql.DacFxResult;\n\t\tlet additionalProps: TelemetryEventProperties = {};\n\t\tlet additionalMeasurements: TelemetryEventMeasures = {};\n\t\ttry {\n\t\t\tservice = await this.getService(msSqlProvider);\n\t\t\townerUri = await azdata.connection.getUriForConnection(this.model.server.connectionId);\n\t\t\tresult = await service.deployDacpac(this.model.filePath, this.model.database, this.model.upgradeExisting, ownerUri, azdata.TaskExecutionMode.execute);\n\t\t} catch (e) {\n\t\t\tadditionalProps.exceptionOccurred = 'true';\n\t\t}\n\n\t\t// If result is null which means exception occured, will be adding additional props to the Telemetry\n\t\tif (!result) {\n\t\t\tadditionalProps = { ...additionalProps, ...this.getDacServiceArgsAsProps(service, this.model.database, this.model.filePath, ownerUri) };\n\t\t}\n\t\tadditionalProps.deploymentStatus = result?.success.toString();\n\t\tadditionalProps.upgradeExistingDatabase = this.model.upgradeExisting.toString();\n\t\tadditionalProps.potentialDataLoss = this.model.potentialDataLoss.toString();\n\n\t\tadditionalMeasurements.deployDacpacFileSizeBytes = await utils.tryGetFileSize(this.model.filePath);\n\t\tadditionalMeasurements.totalDurationMs = (new Date().getTime() - deployStartTime);\n\n\t\t// Deploy Dacpac: 'Deploy button' clicked in deploy summary page, Reporting the event selection to the telemetry\n\t\tthis.sendDacServiceTelemetryEvent(TelemetryViews.DeployDacpac, 'DeployDacpacOperation', additionalProps, additionalMeasurements);\n\t\treturn result;\n\t}\n\n\tprivate async extract(): Promise<mssql.DacFxResult> {\n\t\tconst extractStartTime = new Date().getTime();\n\t\tlet service: mssql.IDacFxService;\n\t\tlet ownerUri: string;\n\t\tlet result: mssql.DacFxResult;\n\t\tlet additionalProps: TelemetryEventProperties = {};\n\t\tlet additionalMeasurements: TelemetryEventMeasures = {};\n\t\ttry {\n\t\t\tservice = await this.getService(msSqlProvider);\n\t\t\townerUri = await azdata.connection.getUriForConnection(this.model.server.connectionId);\n\t\t\tresult = await service.extractDacpac(this.model.database, this.model.filePath, this.model.database, this.model.version, ownerUri, azdata.TaskExecutionMode.execute);\n\t\t} catch (e) {\n\t\t\tadditionalProps.exceptionOccurred = 'true';\n\t\t}\n\n\t\t// If result is null which means exception occured, will be adding additional props to the Telemetry\n\t\tif (!result) {\n\t\t\tadditionalProps = { ...additionalProps, ...this.getDacServiceArgsAsProps(service, this.model.database, this.model.filePath, ownerUri) };\n\t\t}\n\t\tadditionalProps.extractStatus = result?.success.toString();\n\t\tadditionalMeasurements.extractedDacpacFileSizeBytes = await utils.tryGetFileSize(this.model.filePath);\n\t\tadditionalMeasurements.totalDurationMs = (new Date().getTime() - extractStartTime);\n\t\t// Extract Dacpac: 'Extract button' clicked in extract summary page, Reporting the event selection to the telemetry\n\t\tthis.sendDacServiceTelemetryEvent(TelemetryViews.ExtractDacpac, 'ExtractDacpacOperation', additionalProps, additionalMeasurements);\n\t\treturn result;\n\t}\n\n\tprivate async export(): Promise<mssql.DacFxResult> {\n\t\tconst exportStartTime = new Date().getTime();\n\t\tlet service: mssql.IDacFxService;\n\t\tlet ownerUri: string;\n\t\tlet result: mssql.DacFxResult;\n\t\tlet additionalProps: TelemetryEventProperties = {};\n\t\tlet additionalMeasurements: TelemetryEventMeasures = {};\n\t\ttry {\n\t\t\tservice = await this.getService(msSqlProvider);\n\t\t\townerUri = await azdata.connection.getUriForConnection(this.model.server.connectionId);\n\t\t\tresult = await service.exportBacpac(this.model.database, this.model.filePath, ownerUri, azdata.TaskExecutionMode.execute);\n\t\t} catch (e) {\n\t\t\tadditionalProps.exceptionOccurred = 'true';\n\t\t}\n\n\t\t// If result is null which means exception occured, will be adding additional props to the Telemetry\n\t\tif (!result) {\n\t\t\tadditionalProps = { ...additionalProps, ...this.getDacServiceArgsAsProps(service, this.model.database, this.model.filePath, ownerUri) };\n\t\t}\n\t\tadditionalProps.exportStatus = result?.success.toString();\n\t\tadditionalMeasurements.exportedBacpacFileSizeBytes = await utils.tryGetFileSize(this.model.filePath);\n\t\tadditionalMeasurements.totalDurationMs = (new Date().getTime() - exportStartTime);\n\t\t// Export Bacpac: 'Export button' clicked in Export summary page, Reporting the event selection to the telemetry\n\t\tthis.sendDacServiceTelemetryEvent(TelemetryViews.ExportBacpac, 'ExportBacpacOperation', additionalProps, additionalMeasurements);\n\t\treturn result;\n\t}\n\n\tprivate async import(): Promise<mssql.DacFxResult> {\n\t\tconst importStartTime = new Date().getTime();\n\t\tlet service: mssql.IDacFxService;\n\t\tlet ownerUri: string;\n\t\tlet result: mssql.DacFxResult;\n\t\tlet additionalProps: TelemetryEventProperties = {};\n\t\tlet additionalMeasurements: TelemetryEventMeasures = {};\n\t\ttry {\n\t\t\tservice = await this.getService(msSqlProvider);\n\t\t\townerUri = await azdata.connection.getUriForConnection(this.model.server.connectionId);\n\t\t\tresult = await service.importBacpac(this.model.filePath, this.model.database, ownerUri, azdata.TaskExecutionMode.execute);\n\t\t} catch (e) {\n\t\t\tadditionalProps.exceptionOccurred = 'true';\n\t\t}\n\n\t\t// If result is null which means exception occured, will be adding additional props to the Telemetry\n\t\tif (!result) {\n\t\t\tadditionalProps = { ...additionalProps, ...this.getDacServiceArgsAsProps(service, this.model.database, this.model.filePath, ownerUri) };\n\t\t}\n\t\tadditionalProps.importStatus = result?.success.toString();\n\t\tadditionalMeasurements.importedBacpacFileSizeBytes = await utils.tryGetFileSize(this.model.filePath);\n\t\tadditionalMeasurements.totalDurationMs = (new Date().getTime() - importStartTime);\n\t\t// Import Bacpac: 'Import button' clicked in Import summary page, Reporting the event selection to the telemetry\n\t\tthis.sendDacServiceTelemetryEvent(TelemetryViews.ImportBacpac, 'ImportBacpacOperation', additionalProps, additionalMeasurements);\n\t\treturn result;\n\t}\n\n\tpublic async generateDeployScript(): Promise<mssql.DacFxResult> {\n\t\tconst genScriptStartTime = new Date().getTime();\n\t\tlet service: mssql.IDacFxService;\n\t\tlet ownerUri: string;\n\t\tlet result: mssql.DacFxResult;\n\t\tlet additionalProps: TelemetryEventProperties = {};\n\t\tlet additionalMeasurements: TelemetryEventMeasures = {};\n\t\ttry {\n\t\t\tthis.wizard.message = {\n\t\t\t\ttext: loc.generatingScriptMessage,\n\t\t\t\tlevel: azdata.window.MessageLevel.Information,\n\t\t\t\tdescription: ''\n\t\t\t};\n\n\t\t\tservice = await this.getService(msSqlProvider);\n\t\t\townerUri = await azdata.connection.getUriForConnection(this.model.server.connectionId);\n\t\t\tresult = await service.generateDeployScript(this.model.filePath, this.model.database, ownerUri, azdata.TaskExecutionMode.script);\n\t\t} catch (e) {\n\t\t\tadditionalProps.exceptionOccurred = 'true';\n\t\t}\n\n\t\tif (!result || !result.success) {\n\t\t\tvscode.window.showErrorMessage(loc.generateDeployErrorMessage(result?.errorMessage));\n\t\t}\n\n\t\t// If result is null which means exception occured, will be adding additional props to the Telemetry\n\t\tif (!result) {\n\t\t\tadditionalProps = { ...additionalProps, ...this.getDacServiceArgsAsProps(service, this.model.database, this.model.filePath, ownerUri) };\n\t\t}\n\t\tadditionalProps.isScriptGenerated = result?.success.toString();\n\t\tadditionalProps.potentialDataLoss = this.model.potentialDataLoss.toString();\n\t\tadditionalMeasurements.deployDacpacFileSizeBytes = await utils.tryGetFileSize(this.model.filePath);\n\t\tadditionalMeasurements.totalDurationMs = (new Date().getTime() - genScriptStartTime);\n\t\t// Deploy Dacpac 'generate script' button clicked in DeployPlanPage, Reporting the event selection to the telemetry with fail/sucess status\n\t\tthis.sendDacServiceTelemetryEvent(TelemetryViews.DeployDacpac, 'GenerateDeployScriptOperation', additionalProps, additionalMeasurements);\n\t\treturn result;\n\t}\n\n\tpublic getPage(idx: number): Page {\n\t\tlet page: Page;\n\n\t\tif (idx === 1) {\n\t\t\tswitch (this.selectedOperation) {\n\t\t\t\tcase Operation.deploy: {\n\t\t\t\t\tpage = this.pages.get(PageName.deployConfig);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase Operation.extract: {\n\t\t\t\t\tpage = this.pages.get(PageName.extractConfig);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase Operation.import: {\n\t\t\t\t\tpage = this.pages.get(PageName.importConfig);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase Operation.export: {\n\t\t\t\t\tpage = this.pages.get(PageName.exportConfig);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this.isSummaryPage(idx)) {\n\t\t\tpage = this.pages.get(PageName.summary);\n\t\t} else if ((this.selectedOperation === Operation.deploy) && idx === DeployOperationPath.deployPlan) {\n\t\t\tpage = this.pages.get(PageName.deployPlan);\n\t\t}\n\n\t\treturn page;\n\t}\n\n\tpublic isSummaryPage(idx: number): boolean {\n\t\treturn this.selectedOperation === Operation.import && idx === ImportOperationPath.summary\n\t\t\t|| this.selectedOperation === Operation.export && idx === ExportOperationPath.summary\n\t\t\t|| this.selectedOperation === Operation.extract && idx === ExtractOperationPath.summary\n\t\t\t|| this.selectedOperation === Operation.deploy && !this.model.upgradeExisting && idx === DeployNewOperationPath.summary\n\t\t\t|| (this.selectedOperation === Operation.deploy) && idx === DeployOperationPath.summary;\n\t}\n\n\tpublic async generateDeployPlan(): Promise<string> {\n\t\tconst deployPlanStartTime = new Date().getTime();\n\t\tlet service: mssql.IDacFxService;\n\t\tlet ownerUri: string;\n\t\tlet result: mssql.GenerateDeployPlanResult;\n\t\tlet additionalProps: TelemetryEventProperties = {};\n\t\tlet additionalMeasurements: TelemetryEventMeasures = {};\n\t\ttry {\n\t\t\tservice = await this.getService(msSqlProvider);\n\t\t\townerUri = await azdata.connection.getUriForConnection(this.model.server.connectionId);\n\t\t\tresult = await service.generateDeployPlan(this.model.filePath, this.model.database, ownerUri, azdata.TaskExecutionMode.execute);\n\t\t} catch (e) {\n\t\t\tadditionalProps.exceptionOccurred = 'true';\n\t\t}\n\n\t\tif (!result || !result.success) {\n\t\t\tvscode.window.showErrorMessage(loc.deployPlanErrorMessage(result?.errorMessage));\n\t\t}\n\n\t\t// If result is null which means exception occured, will be adding additional props to the Telemetry\n\t\tif (!result) {\n\t\t\tadditionalProps = { ...additionalProps, ...this.getDacServiceArgsAsProps(service, this.model.database, this.model.filePath, ownerUri) };\n\t\t}\n\t\tadditionalProps.isPlanGenerated = result?.success.toString();\n\t\tadditionalMeasurements.totalDurationMs = (new Date().getTime() - deployPlanStartTime);\n\t\t// send Generate deploy plan error/succes telemetry event\n\t\tthis.sendDacServiceTelemetryEvent(TelemetryViews.DeployPlanPage, 'GenerateDeployPlanOperation', additionalProps, additionalMeasurements);\n\t\treturn result.report;\n\t}\n\n\tprivate async getService(providerName: string): Promise<mssql.IDacFxService> {\n\t\tif (!this.dacfxService) {\n\t\t\tthis.dacfxService = (vscode.extensions.getExtension(mssql.extension.name).exports as mssql.IExtension).dacFx;\n\t\t}\n\t\treturn this.dacfxService;\n\t}\n\n\tpublic getDacServiceArgsAsProps(service: mssql.IDacFxService, database: string, filePath: string, ownerUri: string): { [k: string]: string } {\n\t\treturn {\n\t\t\tisServiceExist: (!!service).toString(),\n\t\t\tisDatabaseExists: (!!database).toString(),\n\t\t\tisFilePathExist: (!!filePath).toString(),\n\t\t\tisOwnerUriExist: (!!ownerUri).toString()\n\t\t};\n\t}\n\n\tprivate sendDacServiceTelemetryEvent(telemetryView: string, telemetryAction: string, additionalProps: TelemetryEventProperties, additionalMeasurements: TelemetryEventMeasures): void {\n\t\tTelemetryReporter.createActionEvent(telemetryView, telemetryAction)\n\t\t\t.withAdditionalProperties(additionalProps)\n\t\t\t.withAdditionalMeasurements(additionalMeasurements)\n\t\t\t.send();\n\t}\n}\n"]}