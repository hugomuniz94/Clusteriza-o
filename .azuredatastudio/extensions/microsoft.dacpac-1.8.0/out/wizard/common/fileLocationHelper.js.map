{"version":3,"file":"fileLocationHelper.js","sourceRoot":"../../../src","sources":["wizard/common/fileLocationHelper.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,iCAAiC;AACjC,yBAAyB;AACzB,yBAAyB;AACzB,iDAAiD;AAEjD;;GAEG;AACH,SAAgB,mBAAmB;IAClC,OAAO,+BAA+B,EAAE,CAAC,CAAC,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;AACtF,CAAC;AAFD,kDAEC;AAED;;GAEG;AACH,SAAS,wBAAwB;IAChC,OAAO,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;AAC3G,CAAC;AAED;;GAEG;AACH,SAAS,+BAA+B;IACvC,OAAO,wBAAwB,EAAE,IAAI,wBAAwB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,wBAAwB,EAAE,CAAC,CAAC;AAC5H,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as constants from '../common/constants';\n\n/**\n * Returns the default location to save a dacpac or bacpac\n */\nexport function defaultSaveLocation(): string {\n\treturn dacFxSaveLocationSettingIsValid() ? dacFxSaveLocationSetting() : os.homedir();\n}\n\n/**\n * Returns the workspace setting on the default location to save dacpacs and bacpacs\n */\nfunction dacFxSaveLocationSetting(): string {\n\treturn vscode.workspace.getConfiguration(constants.dacFxConfigurationKey)[constants.dacFxSaveLocationKey];\n}\n\n/**\n * Returns if the default save location for dacpacs and bacpacs setting exists and is a valid path\n */\nfunction dacFxSaveLocationSettingIsValid(): boolean {\n\treturn dacFxSaveLocationSetting() && dacFxSaveLocationSetting().trim() !== '' && fs.existsSync(dacFxSaveLocationSetting());\n}\n"]}